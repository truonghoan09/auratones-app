/* src/styles/ChordPage.scss */
/* Đồng bộ responsive với header qua mixins/breakpoints */
@use "./mixins" as *;

/* ===== Surface ===== */
.chord-page__surface {
  background:
    radial-gradient(1200px 600px at 10% -10%, rgba(var(--accent-color-rgb), 0.06), transparent 50%),
    radial-gradient(1000px 500px at 100% 0%, rgba(var(--accent-color-rgb), 0.05), transparent 55%),
    var(--background-color);
  min-height: 100vh;
  overflow-x: hidden; /* tránh tràn ngang do shadow/transform */
}

/* ===== Container ===== */
.chord-page__container {
  width: min(1120px, 100% - 32px);
  margin-inline: auto;
  padding: 16px 0 24px;
  display: flex;
  flex-direction: column;
  gap: 16px;
}
.chord-page__container.with-toc {
  display: grid;
  grid-template-columns: 240px 1fr;
  gap: 16px;
}
.chord-page__container.compact {
  display: flex;
  flex-direction: column;
}

/* ===== Toolbar (2 hàng) ===== */
.toolbar {
  display: grid;
  grid-template-rows: auto auto;
  gap: 10px;
  padding: 12px;
  border-radius: var(--border-radius-md);
  background: var(--card-background);
  border: 1px solid color-mix(in srgb, var(--text-color) 10%, transparent);
  box-shadow: var(--box-shadow);
  overflow: hidden; /* viền gọn trong container nhỏ */
}
.toolbar__row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  flex-wrap: wrap;
}
.toolbar__row--top .left,
.toolbar__row--top .right { display: flex; align-items: center; gap: 12px; flex-wrap: wrap; }
.toolbar__row--filters { justify-content: flex-start; gap: 10px; }
.filters__future-space { flex: 1 1 auto; min-height: 0.001px; }

/* ===== Segments ===== */
.seg {
  display: inline-flex; align-items: stretch; gap: 0;
  border-radius: 10px; overflow: hidden;
  border: 1px solid color-mix(in srgb, var(--text-color) 12%, transparent);
  background: color-mix(in srgb, var(--card-background) 92%, var(--background-color) 8%);
}
.seg > * {
  padding: 6px 12px; border: none; background: transparent; cursor: pointer;
  font-weight: 600; color: var(--text-color);
  transition: background 140ms ease, color 140ms ease, transform 100ms ease;
}
.seg > *:hover { background: rgba(var(--accent-color-rgb), .10); color: var(--accent-color); }
.seg > *.active { background: var(--accent-color); color: #fff; }
.seg select { @include select-base(1.875rem, 8rem, 2rem, .75rem); border: none; background-color: transparent; }
.seg--filters { border-radius: 10px; }

/* ===== Search ===== */
.search {
  padding: 8px 12px; border-radius: 10px;
  border: 1px solid color-mix(in srgb, var(--text-color) 12%, transparent);
  min-width: 260px; background: var(--card-background); color: var(--text-color);
  outline: none; transition: border-color 140ms ease, box-shadow 140ms ease;
}
.search:focus { @include focus-ring(); }

/* ===== Sidebar ===== */
.root-sidebar { position: relative; display: none; }
.chord-page__container.with-toc .root-sidebar { display: block; }

.root-sidebar__inner {
  position: sticky; top: 72px;
  max-height: calc(100vh - 96px); overflow: auto;
  border: 1px solid color-mix(in srgb, var(--text-color) 10%, transparent);
  border-radius: 12px; padding: 12px; background: var(--card-background); box-shadow: var(--box-shadow);
}
.root-sidebar__title { font-weight: 700; margin-bottom: 8px; opacity: .8; }
.root-list { list-style: none; margin: 0; padding: 0; }
.root-link {
  width: 100%; text-align: left; padding: 8px 10px; border-radius: 8px; border: none;
  background: transparent; cursor: pointer; font-size: 14px; color: var(--text-color);
  transition: background 140ms ease, color 140ms ease;
}
.root-link:hover { background: rgba(0,0,0,.06); }
.root-link.active { background: rgba(var(--accent-color-rgb), .14); color: var(--accent-color); font-weight: 700; }

/* ===== Main ===== */
.chord-main { display: flex; flex-direction: column; gap: 12px; }

/* Chips khi compact */
.root-chips { display: flex; gap: 8px; flex-wrap: wrap; margin: 4px 0 12px; }
.root-chips .chip {
  padding: 6px 10px;
  border: 1px solid color-mix(in srgb, var(--text-color) 12%, transparent);
  border-radius: 999px; background: var(--card-background);
  box-shadow: 0 1px 2px rgba(0,0,0,0.04);
  cursor: pointer; font-size: 13px; color: var(--text-color);
  transition: background 140ms ease, border-color 140ms ease, color 140ms ease;
}
.root-chips .chip:hover { border-color: var(--accent-color); color: var(--accent-color); }
.root-chips .chip.active {
  background: rgba(var(--accent-color-rgb), .14);
  border-color: rgba(var(--accent-color-rgb), .4);
  color: var(--accent-color); font-weight: 700;
}

/* ===== Grid of cards ===== */
.grid {
  display: grid;
  gap: 14px;
  grid-template-columns: repeat( auto-fill, minmax(200px, 1fr) );
}
.cell { width: 100%; }

/* Empty */
.empty-state { padding: 24px; text-align: center; opacity: .8; }
.chord-page__spacer { height: 8px; }

/* ===== Responsive ===== */

/* A) Khi header thu gọn (theo $bp-lg-collapse):
      - Gộp .with-toc về 1 cột, căn giữa, padding ngang giống header (1rem)
      - Ẩn sidebar
      - Toolbar/contents không tràn ngang
      - Lưới giữ 3 cột co giãn */
@include down($bp-lg-collapse) {
  .chord-page__container,
  .chord-page__container.with-toc {
    display: flex !important;
    flex-direction: column !important;
    width: 100% !important;
    padding-inline: 1rem; /* khớp header desktop */
    box-sizing: border-box;
  }
  .root-sidebar { display: none !important; }

  .grid { grid-template-columns: repeat(3, minmax(0, 1fr)); }
}

/* B) Tablet: search full width dễ nhập */
@include down($bp-tablet) {
  .toolbar__row--top .right { width: 100%; justify-content: flex-start; gap: 8px; }
  .toolbar__row--top .right .search { flex: 1 1 280px; min-width: 0; }
}

/* C) Mobile nhỏ: vẫn 3 cột, pad ngang giống header mobile (12px) */
@include down($bp-mobile) {
  .chord-page__container { padding-inline: 12px; } /* khớp header mobile */
  .toolbar { padding: 10px; }
  .seg > * { padding: 6px 10px; }
  .search { min-width: 0; width: 100%; }
  .toolbar__row { gap: 8px; }
  .toolbar__row--filters { flex-wrap: wrap; }
  .grid { grid-template-columns: repeat(3, minmax(0, 1fr)); }
}

/* D) Siêu hẹp: xuống 2 cột */
@include down($bp-tiny) {
  .grid { grid-template-columns: repeat(2, minmax(0, 1fr)); }
}
